{"version":3,"file":"static/js/396.b2b880d3.chunk.js","mappings":"kNAGaA,EAAO,SAAHC,GAAwB,IAAlBC,EAAUD,EAAVC,WACrBC,GAA4BC,EAAAA,EAAAA,UAAS,KAAIC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAlCI,EAAMF,EAAA,GAAEG,EAASH,EAAA,GAWxB,OACEI,EAAAA,EAAAA,MAAA,QAAMC,SANO,SAAAC,GACbA,EAAMC,iBACNV,EAAWK,EAEb,EAEyBM,SAAA,EACrBC,EAAAA,EAAAA,KAAA,SAAOC,SAXI,SAAAJ,GACbH,EAAUG,EAAMK,cAAcC,MAChC,EAS6BC,KAAK,SAASD,MAAOV,EAAQY,KAAK,UAC3DL,EAAAA,EAAAA,KAAA,UAAQK,KAAK,SAAQN,SAAC,eAG5B,E,kCCfaO,EAAc,SAAHnB,GAAmB,IAAboB,EAAKpB,EAALoB,MAC5BlB,GAA4BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAjCmB,EAAMjB,EAAA,GAAEkB,EAASlB,EAAA,GACxBmB,GAAwBpB,EAAAA,EAAAA,WAAS,GAAMqB,GAAAnB,EAAAA,EAAAA,GAAAkB,EAAA,GAAhCE,EAAID,EAAA,GAAEE,EAAOF,EAAA,GACdG,GAAWC,EAAAA,EAAAA,MAqBjB,OAnBAC,EAAAA,EAAAA,YAAU,WACR,GAAKT,EAEE,CACLM,GAAQ,GAER,IAAMI,EAAa,IAAIC,gBAOvB,OALAC,EAAAA,EAAAA,IAAYZ,GACTa,MAAK,SAAAC,GAAI,OAAIZ,EAAUY,EAAKC,QAAQ,IACpCC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAM,IACjCG,SAAQ,kBAAMd,GAAQ,EAAM,IAExB,WACLI,EAAWW,OACb,CACF,CACF,GAAG,CAACrB,KAGFZ,EAAAA,EAAAA,MAAA,OAAAI,SAAA,CACGa,IAAQZ,EAAAA,EAAAA,KAAC6B,EAAAA,EAAM,IAEfrB,EAAOsB,KAAI,SAAAC,GAAoB,IAAjBC,EAAKD,EAALC,MAAOC,EAAEF,EAAFE,GACpB,OACEjC,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAACkC,EAAAA,GAAI,CAACC,GAAE,WAAAC,OAAaH,GAAKlC,UACxBC,EAAAA,EAAAA,KAAA,MAAaqC,MAAO,CAAEC,KAAMxB,GAAWf,SACpCiC,GADMC,MAMjB,MAGN,ECrBA,EArBe,WAEb,IAAAM,GAAwCC,EAAAA,EAAAA,MAAiBC,GAAAjD,EAAAA,EAAAA,GAAA+C,EAAA,GAAlDG,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GAE9BlC,EAAQmC,EAAaE,IAAI,SAS/B,OACEjD,EAAAA,EAAAA,MAAA,OAAAI,SAAA,EACEC,EAAAA,EAAAA,KAACd,EAAI,CAACE,WATY,SAAAe,GACpB,GAAc,MAAVA,EACF,OAAOwC,EAAgB,CAAC,GAE1BA,EAAgB,CAAEpC,MAAOJ,GAC3B,KAKIH,EAAAA,EAAAA,KAACM,EAAW,CAACC,MAAOA,MAG1B,C","sources":["components/Form/Form.jsx","components/FilmGalleryMovies/FilmsMovies.jsx","pages/Movies.jsx"],"sourcesContent":["import { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const Form = ({ submitForm }) => {\n  const [search, setSearch] = useState(' ');\n\n  const change = event => {\n    setSearch(event.currentTarget.value);\n  };\n\n  const submit = event => {\n    event.preventDefault();\n    submitForm(search);\n    // setSearch(' ');\n  };\n  return (\n    <form onSubmit={submit}>\n      <input onChange={change} name=\"search\" value={search} type=\"text\" />\n      <button type=\"submit\"> Search </button>\n    </form>\n  );\n};\n\nForm.propTypes = {\n  submitForm: PropTypes.func,\n};\n","import { useEffect, useState } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { Loader } from '../loader/Loader';\nimport { fetchMovies } from 'components/Api';\nimport PropTypes from 'prop-types';\n\nexport const FilmSMovies = ({ query }) => {\n  const [movies, setMovies] = useState([]);\n  const [load, setLoad] = useState(false);\n  const location = useLocation();\n\n  useEffect(() => {\n    if (!query) {\n      return;\n    } else {\n      setLoad(true);\n\n      const controller = new AbortController();\n\n      fetchMovies(query)\n        .then(data => setMovies(data.results))\n        .catch(error => console.log(error))\n        .finally(() => setLoad(false));\n\n      return () => {\n        controller.abort();\n      };\n    }\n  }, [query]);\n\n  return (\n    <div>\n      {load && <Loader />}\n\n      {movies.map(({ title, id }) => {\n        return (\n          <ul>\n            <Link to={`/movies/${id}`}>\n              <li key={id} state={{ from: location }}>\n                {title}\n              </li>\n            </Link>\n          </ul>\n        );\n      })}\n    </div>\n  );\n};\n\nFilmSMovies.propTypes = {\n  query: PropTypes.string,\n};\n","// import { useState } from 'react';\nimport { Form } from '../components/Form/Form';\nimport { FilmSMovies } from '../components/FilmGalleryMovies/FilmsMovies';\nimport { useSearchParams } from 'react-router-dom';\n\nconst Movies = () => {\n  // const [query, setQuery] = useState(' ');\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const query = searchParams.get('query');\n\n  const handlerSubmit = value => {\n    if (value === ' ') {\n      return setSearchParams({});\n    }\n    setSearchParams({ query: value });\n  };\n\n  return (\n    <div>\n      <Form submitForm={handlerSubmit} />\n      <FilmSMovies query={query} />\n    </div>\n  );\n};\n\nexport default Movies;\n"],"names":["Form","_ref","submitForm","_useState","useState","_useState2","_slicedToArray","search","setSearch","_jsxs","onSubmit","event","preventDefault","children","_jsx","onChange","currentTarget","value","name","type","FilmSMovies","query","movies","setMovies","_useState3","_useState4","load","setLoad","location","useLocation","useEffect","controller","AbortController","fetchMovies","then","data","results","catch","error","console","log","finally","abort","Loader","map","_ref2","title","id","Link","to","concat","state","from","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","get"],"sourceRoot":""}