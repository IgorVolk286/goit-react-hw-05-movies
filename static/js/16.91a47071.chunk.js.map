{"version":3,"file":"static/js/16.91a47071.chunk.js","mappings":"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","sources":["components/FilmForm/FilmForm styled.js","components/FilmForm/FilmForm.jsx","pages/MovieDetals/MoviesDetals styled.js","pages/MovieDetals/MovieDetails.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Img = styled.img`\n  width: 500px;\n`;\nexport const Card = styled.div`\n  margin-left: auto;\n  margin-right: auto;\n  width: 1200px;\n  display: flex;\n  gap: 30px;\n`;\n// export const Content = styled.div`\n//   margin: 0;\n// `;\nexport const Title = styled.h1``;\n","import { useState, useEffect } from 'react';\nimport { fetchMovieDetals } from 'components/Api';\nimport { Loader } from '../loader/Loader';\nimport { Img, Card } from './FilmForm styled';\n// import { Link, useLocation } from 'react-router-dom';\n\nexport const FilmForm = ({ movie_id }) => {\n  const [movieDetals, setMovieDetals] = useState({});\n  const [load, setLoad] = useState(false);\n\n  const defaultImg =\n    '<https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700>';\n\n  useEffect(() => {\n    if (!movie_id) {\n      return;\n    }\n    setLoad(true);\n    fetchMovieDetals(movie_id)\n      .then(data => setMovieDetals(data))\n      .catch(error => alert(error.message))\n      .finally(() => setLoad(false));\n  }, [movie_id]);\n\n  const { backdrop_path, title, vote_average, name, overview } = movieDetals;\n  return (\n    <div>\n      <Card>\n        {load && <Loader />}\n        <div>\n          <Img\n            src={\n              backdrop_path\n                ? `https://image.tmdb.org/t/p/w500/${backdrop_path}`\n                : defaultImg\n            }\n            alt=\"poster\"\n            width={250}\n          />\n        </div>\n        <div>\n          <h1>{title || name}</h1>\n          <p> User score: {Math.round(vote_average * 10)}%</p>\n          <h3>Overview </h3>\n          <p>{overview}</p>\n          <h3>Genres</h3>\n          {/* <p>{movieDetals.genres.map(el => el.name).join(', ')}</p> */}\n        </div>\n      </Card>\n    </div>\n  );\n};\n","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const CastLink = styled(NavLink)`\n  font-size: 36px;\n  font-weight: 400px;\n  font-style: italic;\n  text-decoration: underline;\n  margin-left: 15px;\n`;\nexport const TitleReviews = styled.h2`\n  font-size: 24px;\n  margin-top: 35px;\n  margin-left: 15px;\n`;\n","import { Outlet, useParams, useLocation, Link } from 'react-router-dom';\nimport { FilmForm } from '../../components/FilmForm/FilmForm';\nimport { CastLink, TitleReviews } from './MoviesDetals styled';\nimport { Suspense, useRef } from 'react';\n//\nconst MovieDetails = () => {\n  const { movie_id } = useParams();\n  const location = useLocation();\n\n  const backLocation = useRef(location.state?.from ?? '/movies');\n\n  // console.log(backLocation);\n  // console.log(location);\n  return (\n    <div>\n      <Link to={backLocation.current}>GO BACK</Link>\n\n      <FilmForm movie_id={movie_id} />\n\n      <TitleReviews>Addishional information</TitleReviews>\n      <ul>\n        <li>\n          <CastLink to=\"cast\">Cast</CastLink>\n        </li>\n        <li>\n          <CastLink to=\"reviews\">Reviews</CastLink>\n        </li>\n      </ul>\n      <Suspense fallback={<div>Loading...</div>}>\n        <Outlet />\n      </Suspense>\n    </div>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["Img","styled","_templateObject","_taggedTemplateLiteral","Card","_templateObject2","_templateObject3","FilmForm","_ref","movie_id","_useState","useState","_useState2","_slicedToArray","movieDetals","setMovieDetals","_useState3","_useState4","load","setLoad","useEffect","fetchMovieDetals","then","data","catch","error","alert","message","finally","backdrop_path","title","vote_average","name","overview","_jsx","children","_jsxs","Loader","src","concat","alt","width","Math","round","CastLink","NavLink","TitleReviews","_location$state$from","_location$state","useParams","location","useLocation","backLocation","useRef","state","from","Link","to","current","Suspense","fallback","Outlet"],"sourceRoot":""}