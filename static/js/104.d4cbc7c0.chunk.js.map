{"version":3,"file":"static/js/104.d4cbc7c0.chunk.js","mappings":"oPAMaA,EAAc,SAAHC,GAAmB,IAAbC,EAAKD,EAALC,MAC5BC,GAA4BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAjCI,EAAMF,EAAA,GAAEG,EAASH,EAAA,GACxBI,GAAwBL,EAAAA,EAAAA,WAAS,GAAMM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAhCE,EAAID,EAAA,GAAEE,EAAOF,EAAA,GACdG,GAAWC,EAAAA,EAAAA,MAsBjB,OArBAC,QAAQC,IAAIH,IAEZI,EAAAA,EAAAA,YAAU,WACR,GAAKf,EAEE,CACLU,GAAQ,GAER,IAAMM,EAAa,IAAIC,gBAOvB,OALAC,EAAAA,EAAAA,IAAYlB,GACTmB,MAAK,SAAAC,GAAI,OAAId,EAAUc,EAAKC,QAAQ,IACpCC,OAAM,SAAAC,GAAK,OAAIV,QAAQC,IAAIS,EAAM,IACjCC,SAAQ,kBAAMd,GAAQ,EAAM,IAExB,WACLM,EAAWS,OACb,CACF,CACF,GAAG,CAACzB,KAGF0B,EAAAA,EAAAA,MAAA,OAAAC,SAAA,CACGlB,IAAQmB,EAAAA,EAAAA,KAACC,EAAAA,EAAM,IAEfxB,EAAOyB,KAAI,SAAAC,GAAoB,IAAjBC,EAAKD,EAALC,MAAOC,EAAEF,EAAFE,GACpB,OACEL,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAACM,EAAAA,GAAI,CAACC,GAAE,WAAAC,OAAaH,GAAMI,MAAO,CAAEC,KAAM3B,GAAWgB,UACnDC,EAAAA,EAAAA,KAAA,MAAAD,SAAcK,GAALC,MAIjB,MAGN,ECbA,EA5Be,WAAO,IAADM,EACnBC,GAAwCC,EAAAA,EAAAA,MAAiBC,GAAAtC,EAAAA,EAAAA,GAAAoC,EAAA,GAAlDG,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GACpCzC,GAA4BC,EAAAA,EAAAA,UAAS,KAAIC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAlC4C,EAAM1C,EAAA,GAAE2C,EAAS3C,EAAA,GAClBH,EAAiC,QAA5BuC,EAAGI,EAAaI,IAAI,gBAAQ,IAAAR,EAAAA,EAAI,IAc3C,OACEb,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACED,EAAAA,EAAAA,MAAA,QAAMsB,SAVY,SAAAC,GAEpB,GADAA,EAAMC,iBACS,MAAXL,EACF,OAAOD,EAAgB,CAAC,GAE1BA,EAAgB,CAAE5C,MAAO6C,GAC3B,EAIkClB,SAAA,EAC5BC,EAAAA,EAAAA,KAAA,SAAOuB,SAfE,SAAAF,GACbH,EAAUG,EAAMG,cAAcC,MAChC,EAa+BC,KAAK,SAASD,MAAOR,EAAQU,KAAK,UAC3D3B,EAAAA,EAAAA,KAAA,UAAQ2B,KAAK,SAAQ5B,SAAC,gBAEvBkB,EAAOW,OAAS,IAAK5B,EAAAA,EAAAA,KAAC9B,EAAW,CAACE,MAAOA,MAGhD,C","sources":["components/FilmGalleryMovies/FilmsMovies.jsx","pages/Movies.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { Loader } from '../loader/Loader';\nimport { fetchMovies } from 'components/Api';\nimport PropTypes from 'prop-types';\n\nexport const FilmsMovies = ({ query }) => {\n  const [movies, setMovies] = useState([]);\n  const [load, setLoad] = useState(false);\n  const location = useLocation();\n  console.log(location);\n\n  useEffect(() => {\n    if (!query) {\n      return;\n    } else {\n      setLoad(true);\n\n      const controller = new AbortController();\n\n      fetchMovies(query)\n        .then(data => setMovies(data.results))\n        .catch(error => console.log(error))\n        .finally(() => setLoad(false));\n\n      return () => {\n        controller.abort();\n      };\n    }\n  }, [query]);\n\n  return (\n    <div>\n      {load && <Loader />}\n\n      {movies.map(({ title, id }) => {\n        return (\n          <ul>\n            <Link to={`/movies/${id}`} state={{ from: location }}>\n              <li key={id}>{title}</li>\n            </Link>\n          </ul>\n        );\n      })}\n    </div>\n  );\n};\n\nFilmsMovies.propTypes = {\n  query: PropTypes.string,\n};\n","import { useState } from 'react';\n\nimport { FilmsMovies } from '../components/FilmGalleryMovies/FilmsMovies';\nimport { useSearchParams } from 'react-router-dom';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [search, setSearch] = useState(' ');\n  const query = searchParams.get('query') ?? ' ';\n\n  const change = event => {\n    setSearch(event.currentTarget.value);\n  };\n\n  const handlerSubmit = event => {\n    event.preventDefault();\n    if (search === ' ') {\n      return setSearchParams({});\n    }\n    setSearchParams({ query: search });\n  };\n\n  return (\n    <div>\n      <form onSubmit={handlerSubmit}>\n        <input onChange={change} name=\"search\" value={search} type=\"text\" />\n        <button type=\"submit\"> Search </button>\n      </form>\n      {search.length > 0 && <FilmsMovies query={query} />}\n    </div>\n  );\n};\n\nexport default Movies;\n"],"names":["FilmsMovies","_ref","query","_useState","useState","_useState2","_slicedToArray","movies","setMovies","_useState3","_useState4","load","setLoad","location","useLocation","console","log","useEffect","controller","AbortController","fetchMovies","then","data","results","catch","error","finally","abort","_jsxs","children","_jsx","Loader","map","_ref2","title","id","Link","to","concat","state","from","_searchParams$get","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","search","setSearch","get","onSubmit","event","preventDefault","onChange","currentTarget","value","name","type","length"],"sourceRoot":""}